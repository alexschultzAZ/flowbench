apiVersion: v1
items:
- apiVersion: nvidia.com/v1
  kind: ClusterPolicy
  metadata:
    annotations:
      meta.helm.sh/release-name: gpu-operator
      meta.helm.sh/release-namespace: gpu-operator-resources
    creationTimestamp: "2024-09-18T22:18:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: gpu-operator
      app.kubernetes.io/instance: gpu-operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: gpu-operator
      app.kubernetes.io/version: v23.9.1
      helm.sh/chart: gpu-operator-v23.9.1
    name: cluster-policy
    resourceVersion: "16924"
    uid: d22bb2c8-f12a-405b-aeaf-afd2a17206e7
  spec:
    ccManager:
      defaultMode: "off"
      enabled: false
      env: []
      image: k8s-cc-manager
      imagePullPolicy: IfNotPresent
      repository: nvcr.io/nvidia/cloud-native
      version: v0.1.1
    cdi:
      default: false
      enabled: false
    daemonsets:
      labels:
        app.kubernetes.io/managed-by: gpu-operator
        helm.sh/chart: gpu-operator-v23.9.1
      priorityClassName: system-node-critical
      rollingUpdate:
        maxUnavailable: "1"
      tolerations:
      - effect: NoSchedule
        key: nvidia.com/gpu
        operator: Exists
      updateStrategy: RollingUpdate
    dcgm:
      enabled: false
      hostPort: 5555
      image: dcgm
      imagePullPolicy: IfNotPresent
      repository: nvcr.io/nvidia/cloud-native
      version: 3.3.0-1-ubuntu22.04
    dcgmExporter:
      enabled: true
      env:
      - name: DCGM_EXPORTER_LISTEN
        value: :9400
      - name: DCGM_EXPORTER_KUBERNETES
        value: "true"
      - name: DCGM_EXPORTER_COLLECTORS
        value: /etc/dcgm-exporter/dcp-metrics-included.csv
      image: dcgm-exporter
      imagePullPolicy: IfNotPresent
      repository: nvcr.io/nvidia/k8s
      serviceMonitor:
        additionalLabels: {}
        enabled: false
        honorLabels: false
        interval: 15s
        relabelings: []
      version: 3.3.0-3.2.0-ubuntu22.04
    devicePlugin:
      enabled: true
      env:
      - name: PASS_DEVICE_SPECS
        value: "true"
      - name: FAIL_ON_INIT_ERROR
        value: "true"
      - name: DEVICE_LIST_STRATEGY
        value: envvar
      - name: DEVICE_ID_STRATEGY
        value: uuid
      - name: NVIDIA_VISIBLE_DEVICES
        value: all
      - name: NVIDIA_DRIVER_CAPABILITIES
        value: all
      image: k8s-device-plugin
      imagePullPolicy: IfNotPresent
      repository: nvcr.io/nvidia
      version: v0.14.3-ubi8
    driver:
      certConfig:
        name: ""
      enabled: false
      image: driver
      imagePullPolicy: IfNotPresent
      kernelModuleConfig:
        name: ""
      licensingConfig:
        configMapName: ""
        nlsEnabled: true
      manager:
        env:
        - name: ENABLE_GPU_POD_EVICTION
          value: "true"
        - name: ENABLE_AUTO_DRAIN
          value: "false"
        - name: DRAIN_USE_FORCE
          value: "false"
        - name: DRAIN_POD_SELECTOR_LABEL
          value: ""
        - name: DRAIN_TIMEOUT_SECONDS
          value: 0s
        - name: DRAIN_DELETE_EMPTYDIR_DATA
          value: "false"
        image: k8s-driver-manager
        imagePullPolicy: IfNotPresent
        repository: nvcr.io/nvidia/cloud-native
        version: v0.6.5
      rdma:
        enabled: false
        useHostMofed: false
      repoConfig:
        configMapName: ""
      repository: nvcr.io/nvidia
      startupProbe:
        failureThreshold: 120
        initialDelaySeconds: 60
        periodSeconds: 10
        timeoutSeconds: 60
      upgradePolicy:
        autoUpgrade: true
        drain:
          deleteEmptyDir: false
          enable: false
          force: false
          timeoutSeconds: 300
        maxParallelUpgrades: 1
        maxUnavailable: 25%
        podDeletion:
          deleteEmptyDir: false
          force: false
          timeoutSeconds: 300
        waitForCompletion:
          timeoutSeconds: 0
      useNvidiaDriverCRD: false
      useOpenKernelModules: false
      usePrecompiled: false
      version: 535.129.03
      virtualTopology:
        config: ""
    gfd:
      enabled: true
      env:
      - name: GFD_SLEEP_INTERVAL
        value: 60s
      - name: GFD_FAIL_ON_INIT_ERROR
        value: "true"
      image: gpu-feature-discovery
      imagePullPolicy: IfNotPresent
      repository: nvcr.io/nvidia
      version: v0.8.2-ubi8
    kataManager:
      config:
        artifactsDir: /opt/nvidia-gpu-operator/artifacts/runtimeclasses
        runtimeClasses:
        - artifacts:
            pullSecret: ""
            url: nvcr.io/nvidia/cloud-native/kata-gpu-artifacts:ubuntu22.04-535.54.03
          name: kata-qemu-nvidia-gpu
          nodeSelector: {}
        - artifacts:
            pullSecret: ""
            url: nvcr.io/nvidia/cloud-native/kata-gpu-artifacts:ubuntu22.04-535.86.10-snp
          name: kata-qemu-nvidia-gpu-snp
          nodeSelector:
            nvidia.com/cc.capable: "true"
      enabled: false
      image: k8s-kata-manager
      imagePullPolicy: IfNotPresent
      repository: nvcr.io/nvidia/cloud-native
      version: v0.1.2
    mig:
      strategy: single
    migManager:
      config:
        default: all-disabled
        name: default-mig-parted-config
      enabled: true
      env:
      - name: WITH_REBOOT
        value: "false"
      gpuClientsConfig:
        name: ""
      image: k8s-mig-manager
      imagePullPolicy: IfNotPresent
      repository: nvcr.io/nvidia/cloud-native
      version: v0.5.5-ubuntu20.04
    nodeStatusExporter:
      enabled: false
      image: gpu-operator-validator
      imagePullPolicy: IfNotPresent
      repository: nvcr.io/nvidia/cloud-native
      version: v23.9.1
    operator:
      defaultRuntime: containerd
      initContainer:
        image: cuda
        imagePullPolicy: IfNotPresent
        repository: nvcr.io/nvidia
        version: 12.3.1-base-ubi8
      runtimeClass: nvidia
    psa:
      enabled: false
    psp:
      enabled: false
    sandboxDevicePlugin:
      enabled: true
      image: kubevirt-gpu-device-plugin
      imagePullPolicy: IfNotPresent
      repository: nvcr.io/nvidia
      version: v1.2.4
    sandboxWorkloads:
      defaultWorkload: container
      enabled: false
    toolkit:
      enabled: true
      env:
      - name: CONTAINERD_CONFIG
        value: /var/snap/microk8s/current/args/containerd-template.toml
      - name: CONTAINERD_SOCKET
        value: /var/snap/microk8s/common/run/containerd.sock
      - name: CONTAINERD_SET_AS_DEFAULT
        value: "1"
      image: container-toolkit
      imagePullPolicy: IfNotPresent
      installDir: /usr/local/nvidia
      repository: nvcr.io/nvidia/k8s
      version: v1.14.3-ubuntu20.04
    validator:
      driver:
        env:
        - name: DISABLE_DEV_CHAR_SYMLINK_CREATION
          value: "true"
      image: gpu-operator-validator
      imagePullPolicy: IfNotPresent
      plugin:
        env:
        - name: WITH_WORKLOAD
          value: "false"
      repository: nvcr.io/nvidia/cloud-native
      version: v23.9.1
    vfioManager:
      driverManager:
        env:
        - name: ENABLE_GPU_POD_EVICTION
          value: "false"
        - name: ENABLE_AUTO_DRAIN
          value: "false"
        image: k8s-driver-manager
        imagePullPolicy: IfNotPresent
        repository: nvcr.io/nvidia/cloud-native
        version: v0.6.2
      enabled: true
      image: cuda
      imagePullPolicy: IfNotPresent
      repository: nvcr.io/nvidia
      version: 12.3.1-base-ubi8
    vgpuDeviceManager:
      config:
        default: default
        name: ""
      enabled: true
      image: vgpu-device-manager
      imagePullPolicy: IfNotPresent
      repository: nvcr.io/nvidia/cloud-native
      version: v0.2.4
    vgpuManager:
      driverManager:
        env:
        - name: ENABLE_GPU_POD_EVICTION
          value: "false"
        - name: ENABLE_AUTO_DRAIN
          value: "false"
        image: k8s-driver-manager
        imagePullPolicy: IfNotPresent
        repository: nvcr.io/nvidia/cloud-native
        version: v0.6.4
      enabled: false
      image: vgpu-manager
      imagePullPolicy: IfNotPresent
kind: List
metadata:
  resourceVersion: ""
